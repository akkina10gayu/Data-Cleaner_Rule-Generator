2025-07-27 21:47:16 - utils.logger - INFO - logger.py:72 - Logging configured - Level: INFO
2025-07-27 21:47:16 - utils.logger - INFO - logger.py:74 - Log file: logs/pipeline_20250727_214716.log
2025-07-27 21:47:16 - src.rule_engine - INFO - rule_engine.py:39 - Loaded rules configuration from config/rules.json
2025-07-27 21:47:16 - __main__ - INFO - main.py:51 - Pipeline initialized with confidence threshold: 0.7
2025-07-27 21:47:16 - __main__ - INFO - main.py:66 - ================================================================================
2025-07-27 21:47:16 - __main__ - INFO - main.py:67 - STARTING DATA CLEANING PIPELINE
2025-07-27 21:47:16 - __main__ - INFO - main.py:68 - ================================================================================
2025-07-27 21:47:16 - __main__ - INFO - main.py:69 - Input file: data/retail_store_sales.csv
2025-07-27 21:47:16 - __main__ - INFO - main.py:70 - Output directory: output
2025-07-27 21:47:16 - __main__ - INFO - main.py:71 - Confidence threshold: 0.7
2025-07-27 21:47:16 - utils.helpers - INFO - helpers.py:33 - Created output directories under output
2025-07-27 21:47:16 - __main__ - INFO - main.py:78 - 
üìÇ STEP 1: Loading and validating input data...
2025-07-27 21:47:16 - __main__ - INFO - main.py:272 -    ‚úì Successfully loaded 12,575 rows and 11 columns
2025-07-27 21:47:16 - __main__ - INFO - main.py:273 -    ‚úì Memory usage: 1.12 MB
2025-07-27 21:47:16 - __main__ - INFO - main.py:274 -    ‚úì Columns: Transaction ID, Customer ID, Category, Item, Price Per Unit, Quantity, Total Spent, Payment Method, Location, Transaction Date, Discount Applied
2025-07-27 21:47:16 - __main__ - INFO - main.py:87 - 
üìä STEP 2: Profiling dataset characteristics...
2025-07-27 21:47:16 - src.data_profiler - INFO - data_profiler.py:43 - Starting dataset profiling for shape: (12575, 11)
2025-07-27 21:47:16 - src.data_profiler - INFO - data_profiler.py:63 - Dataset profiling completed successfully
2025-07-27 21:47:18 - src.data_profiler - INFO - data_profiler.py:498 - Profile report saved to output/data_profile.html
2025-07-27 21:47:18 - src.data_profiler - INFO - data_profiler.py:792 - Profile results saved to output/data_profile.json
2025-07-27 21:47:18 - __main__ - INFO - main.py:101 -    ‚úì Profile completed in 1.34 seconds
2025-07-27 21:47:18 - __main__ - INFO - main.py:102 -    ‚úì Analyzed 11 columns
2025-07-27 21:47:18 - __main__ - INFO - main.py:105 - 
üéØ STEP 3: Matching cleaning rules to fields...
2025-07-27 21:47:18 - src.rule_engine - INFO - rule_engine.py:56 - Starting rule matching analysis...
2025-07-27 21:47:18 - src.rule_engine - WARNING - rule_engine.py:323 - Field 'Item' did not match any field-specific rules
2025-07-27 21:47:18 - src.rule_engine - INFO - rule_engine.py:421 - Applied dataset rule: validate_transaction_totals
2025-07-27 21:47:18 - src.rule_engine - INFO - rule_engine.py:428 - Applied dataset rule: validate_discount_range to field Discount Applied
2025-07-27 21:47:18 - src.rule_engine - INFO - rule_engine.py:82 - Rule matching completed. Matched rules for 12 fields.
2025-07-27 21:47:18 - src.rule_engine - INFO - rule_engine.py:607 - Rule analysis saved to output/rule_analysis.json
2025-07-27 21:47:18 - __main__ - INFO - main.py:122 -    ‚úì Rule matching completed in 0.02 seconds
2025-07-27 21:47:18 - __main__ - INFO - main.py:123 -    ‚úì Matched 61 rules across 11 fields
2025-07-27 21:47:18 - __main__ - INFO - main.py:124 -    ‚úì Field coverage: 90.9%
2025-07-27 21:47:18 - __main__ - WARNING - main.py:129 -    ‚ö†Ô∏è  1 fields did not match specific rules
2025-07-27 21:47:18 - __main__ - WARNING - main.py:131 -       - Item
2025-07-27 21:47:18 - __main__ - INFO - main.py:134 - 
üßπ STEP 4: Applying cleaning transformations...
2025-07-27 21:47:18 - src.data_cleaner - INFO - data_cleaner.py:43 - Starting data cleaning with confidence threshold: 0.7
2025-07-27 21:47:18 - src.data_cleaner - WARNING - data_cleaner.py:432 - Unknown standardization rule: trim_whitespace
2025-07-27 21:47:18 - src.data_cleaner - WARNING - data_cleaner.py:432 - Unknown standardization rule: trim_whitespace
2025-07-27 21:47:18 - src.data_cleaner - WARNING - data_cleaner.py:432 - Unknown standardization rule: trim_whitespace
2025-07-27 21:47:18 - src.data_cleaner - WARNING - data_cleaner.py:432 - Unknown standardization rule: trim_whitespace
2025-07-27 21:47:18 - src.data_cleaner - WARNING - data_cleaner.py:432 - Unknown standardization rule: trim_whitespace
2025-07-27 21:47:18 - src.data_cleaner - WARNING - data_cleaner.py:432 - Unknown standardization rule: trim_whitespace
2025-07-27 21:47:18 - src.data_cleaner - WARNING - data_cleaner.py:432 - Unknown standardization rule: trim_whitespace
2025-07-27 21:47:18 - src.data_cleaner - WARNING - data_cleaner.py:432 - Unknown standardization rule: trim_whitespace
2025-07-27 21:47:18 - src.data_cleaner - ERROR - data_cleaner.py:764 - Cleaning error - Rule: standardize_categories, Field: Payment Method, Error: Standardization failed: invalid series dtype: expected `String`, got `f64`
2025-07-27 21:47:18 - src.data_cleaner - WARNING - data_cleaner.py:432 - Unknown standardization rule: trim_whitespace
2025-07-27 21:47:18 - src.data_cleaner - WARNING - data_cleaner.py:432 - Unknown standardization rule: trim_whitespace
2025-07-27 21:47:19 - src.data_cleaner - WARNING - data_cleaner.py:432 - Unknown standardization rule: trim_whitespace
2025-07-27 21:47:19 - src.data_cleaner - ERROR - data_cleaner.py:764 - Cleaning error - Rule: handle_missing_numeric, Field: Discount Applied, Error: Missing value handling failed: could not determine supertype of: [bool, dyn int]
2025-07-27 21:47:19 - src.data_cleaner - INFO - data_cleaner.py:64 - Data cleaning completed. Applied 23 operations.
2025-07-27 21:47:19 - src.data_cleaner - INFO - data_cleaner.py:821 - Cleaning report saved to output/cleaning_report.json
2025-07-27 21:47:19 - __main__ - INFO - main.py:159 -    ‚úì Cleaning completed in 1.49 seconds
2025-07-27 21:47:19 - __main__ - INFO - main.py:160 -    ‚úì Performed 23 operations
2025-07-27 21:47:19 - __main__ - INFO - main.py:161 -    ‚úì Affected 121744 records
2025-07-27 21:47:19 - __main__ - WARNING - main.py:164 -    ‚ö†Ô∏è  2 errors encountered
2025-07-27 21:47:19 - __main__ - INFO - main.py:167 - 
üìà STEP 5: Generating quality metrics and monitoring...
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:50 - Starting comprehensive monitoring analysis...
2025-07-27 21:47:19 - src.monitoring - WARNING - monitoring.py:1106 - No detailed cleaning log found, generating sample data for visualization
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:1387 - Generated 16 sample log entries for visualization
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:1113 - Processing 16 log entries
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:87 - Monitoring completed. Generated 3 alerts.
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:2653 - Monitoring report saved to output/monitoring_report.json
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:1580 - Rule performance data available: True
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:1581 - Rule metrics count: 10
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:1588 - Creating rule performance chart with 10 rules
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:1638 - Confidence distribution data: {'excellent_0.9+': 12, 'good_0.7-0.9': 4, 'fair_0.5-0.7': 0, 'poor_<0.5': 0}
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:1649 - Creating confidence chart with values: [12, 4, 0]
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:1688 - Performance timing data: {'data_loading': 0.005, 'profiling': 1.227, 'rule_matching': 0.053, 'cleaning': 0.1, 'monitoring': 0.088}
2025-07-27 21:47:19 - src.monitoring - INFO - monitoring.py:1700 - Creating timeline chart with values: [0.005, 1.227, 0.053, 0.1, 0.088]
2025-07-27 21:47:20 - src.monitoring - INFO - monitoring.py:1428 - Monitoring dashboard saved to output/monitoring_dashboard.html
2025-07-27 21:47:20 - __main__ - INFO - main.py:196 -    ‚úì Monitoring completed in 0.53 seconds
2025-07-27 21:47:20 - __main__ - INFO - main.py:197 -    ‚úì Overall quality score: 94.4%
2025-07-27 21:47:20 - __main__ - INFO - main.py:198 -    ‚úì Generated 3 alerts
2025-07-27 21:47:20 - __main__ - INFO - main.py:199 -    ‚úì Detected 9 anomalies
2025-07-27 21:47:20 - __main__ - INFO - main.py:202 - 
üìã STEP 6: Generating final reports...
2025-07-27 21:47:20 - utils.helpers - INFO - helpers.py:98 - Saved 23 applied rules to output/applied_rules.json
2025-07-27 21:47:20 - __main__ - INFO - main.py:380 -    ‚úì Executive summary saved to output/executive_summary.md
2025-07-27 21:47:20 - __main__ - INFO - main.py:219 - 
================================================================================
2025-07-27 21:47:20 - __main__ - INFO - main.py:220 - PIPELINE EXECUTION COMPLETED SUCCESSFULLY
2025-07-27 21:47:20 - __main__ - INFO - main.py:221 - ================================================================================
2025-07-27 21:47:20 - __main__ - INFO - main.py:222 - Total execution time: 3.41 seconds
2025-07-27 21:47:20 - __main__ - INFO - main.py:223 - Data shape: (12575, 11) ‚Üí (12575, 11)
2025-07-27 21:47:20 - __main__ - INFO - main.py:224 - Quality improvement: 94.4%
2025-07-27 21:47:20 - __main__ - WARNING - main.py:229 - 
‚ö†Ô∏è  ALERTS GENERATED:
2025-07-27 21:47:20 - __main__ - WARNING - main.py:231 - Generated 3 alerts:

MEDIUM (3):
  - Data completeness below threshold: 90.91%
  - Detected 9 anomalies across 8 columns
  - Columns with >20% missing values: Payment Method
2025-07-27 21:47:20 - __main__ - INFO - main.py:233 - 
üìÅ Output files saved to: output/
